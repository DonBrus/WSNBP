###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.1.169/W32 for ARM         31/Jan/2019  15:13:42
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\SMAC\Drivers\Source\maca.c
#    Command line =  
#        -f C:\Users\Brus\AppData\Local\Temp\EWDE58.tmp
#        ("D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\SMAC\Drivers\Source\maca.c" -D NDEBUG -D F24MHZ -D
#        SECURITY_ENABLED -D MC13226Included_d=0 --preprocess=cs
#        "D:\Users\Brus\Documents\my_conn_test\Connectivity Test\Release\List"
#        -lC "D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\Release\List" -lB
#        "D:\Users\Brus\Documents\my_conn_test\Connectivity Test\Release\List"
#        --diag_suppress Pe940,Pe951,Pe911 -o
#        "D:\Users\Brus\Documents\my_conn_test\Connectivity Test\Release\Obj"
#        --endian=little --cpu=ARM7TDMI-S --fpu=None --dlib_config
#        "C:\HDDPrograms\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        "D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\SMAC\Drivers\Interface\" -I
#        "D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\PLM\Interface\" --cpu_mode thumb -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\Release\List\maca.lst
#    Object file  =  
#        D:\Users\Brus\Documents\my_conn_test\Connectivity
#        Test\Release\Obj\maca.o
#
###############################################################################

D:\Users\Brus\Documents\my_conn_test\Connectivity Test\SMAC\Drivers\Source\maca.c
      1          /************************************************************************************
      2          * maca funcions implementation 
      3          *
      4          * (c) Copyright 2008, Freescale, Inc.  All rights reserved.
      5          *
      6          * No part of this document must be reproduced in any form - including copied,
      7          * transcribed, printed or by any electronic means - without specific written
      8          * permission from Freescale.
      9          *
     10          * Last Inspected:
     11          * Last Tested:
     12          ************************************************************************************/
     13          
     14          #include "../Interface/ghdr/maca.h"
     15          
     16          
     17          /************************************************************************************
     18          *************************************************************************************
     19          * Private macros
     20          *************************************************************************************
     21          ************************************************************************************/
     22          
     23          /************************************************************************************
     24          *************************************************************************************
     25          * Private prototypes
     26          *************************************************************************************
     27          ************************************************************************************/
     28          void ResetMaca(void);
     29          
     30          /************************************************************************************
     31          *************************************************************************************
     32          * Private type definitions
     33          *************************************************************************************
     34          ************************************************************************************/
     35          
     36          /************************************************************************************
     37          *************************************************************************************
     38          * Private memory declarations
     39          *************************************************************************************
     40          ************************************************************************************/
     41          
     42          /************************************************************************************
     43          *************************************************************************************
     44          * Public functions
     45          *************************************************************************************
     46          ************************************************************************************/
     47          
     48          /************************************************************************************
     49          * main ResetMaca
     50          *
     51          * Resets MACA module.
     52          *
     53          ************************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     54          void ResetMaca(void)
     55          {
     56            uint32_t tmp;
     57            MACA_WRITE(maca_control, control_seq_nop); 
   \                     ResetMaca: (+1)
   \        0x0   0x4805             LDR      R0,??ResetMaca_0  ;; 0x8000400c
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x6001             STR      R1,[R0, #+0]
     58            do
     59            {
     60              tmp = MACA_READ(maca_status);
   \                     ??ResetMaca_1: (+1)
   \        0x6   0x6841             LDR      R1,[R0, #+4]
     61            }
     62            while ((tmp & maca_status_cc_mask) == cc_not_completed);
   \        0x8   0x0709             LSLS     R1,R1,#+28
   \        0xA   0x0F09             LSRS     R1,R1,#+28
   \        0xC   0x290E             CMP      R1,#+14
   \        0xE   0xD0FA             BEQ      ??ResetMaca_1
     63           
     64            /* Clear all interrupts. */
     65            MACA_WRITE(maca_clrirq,   0xFFFF);
   \       0x10   0x4802             LDR      R0,??ResetMaca_0+0x4  ;; 0xffff
   \       0x12   0x4903             LDR      R1,??ResetMaca_0+0x8  ;; 0x800040c4
   \       0x14   0x6008             STR      R0,[R1, #+0]
     66          }
   \       0x16   0x4770             BX       LR               ;; return
   \                     ??ResetMaca_0:
   \       0x18   0x8000'400C        DC32     0x8000400c
   \       0x1C   0x0000'FFFF        DC32     0xffff
   \       0x20   0x8000'40C4        DC32     0x800040c4
     67          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ResetMaca


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ResetMaca

 
 36 bytes in section .text
 
 36 bytes of CODE memory

Errors: none
Warnings: none
